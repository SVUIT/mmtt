import yaml
import os
import re  # üü¢ Th√™m th∆∞ vi·ªán ƒë·ªÉ chu·∫©n h√≥a t√™n

FOLDERS_YML = "folders.yml"
MARKDOWN_FOLDER = "docs"  # Th∆∞ m·ª•c ch·ª©a c√°c file .md c·ªßa t·ª´ng m√¥n h·ªçc

def normalize_name(name):
    """Chu·∫©n h√≥a t√™n m√¥n h·ªçc: Chuy·ªÉn v·ªÅ ch·ªØ th∆∞·ªùng v√† ch·ªâ l·∫•y m√£ m√¥n (n·∫øu c√≥)."""
    name = name.strip().lower()
    match = re.match(r"([A-Za-z0-9]+)", name)  # L·∫•y ph·∫ßn m√£ m√¥n (n·∫øu c√≥)
    return match.group(1) if match else name

def get_md_files():
    """Duy·ªát qua th∆∞ m·ª•c docs/ v√† tr·∫£ v·ªÅ mapping {chu·∫©n h√≥a t√™n: t√™n file ƒë·∫ßy ƒë·ªß}"""
    md_files = {}
    for root, _, files in os.walk(MARKDOWN_FOLDER):
        for file in files:
            if file.endswith(".md"):
                subject_name = os.path.splitext(file)[0]  # B·ªè ph·∫ßn m·ªü r·ªông .md
                md_files[normalize_name(subject_name)] = os.path.join(root, file)  # L∆∞u ƒë∆∞·ªùng d·∫´n ƒë·∫ßy ƒë·ªß
    return md_files

def update_markdown_files():
    # ƒê·ªçc d·ªØ li·ªáu t·ª´ folders.yml
    with open(FOLDERS_YML, "r", encoding="utf-8") as file:
        data = yaml.safe_load(file)

    subjects = data.get("subjects", {})
    md_files = get_md_files()  # L·∫•y danh s√°ch file .md trong docs/

    for subject, info in subjects.items():
        normalized_subject = normalize_name(subject)

        if normalized_subject in md_files:
            md_file_path = md_files[normalized_subject]

            with open(md_file_path, "r", encoding="utf-8") as md_file:
                lines = md_file.readlines()

            # T√¨m v√† c·∫≠p nh·∫≠t ng√†y c·∫≠p nh·∫≠t
            with open(md_file_path, "w", encoding="utf-8") as md_file:
                found = False
                for line in lines:
                    if line.startswith("**Ng√†y c·∫≠p nh·∫≠t**:"):
                        md_file.write(f"**Ng√†y c·∫≠p nh·∫≠t**: {info.get('last_modified', 'Kh√¥ng c√≥ d·ªØ li·ªáu')}\n")
                        found = True
                    else:
                        md_file.write(line)
                
                # N·∫øu file ch∆∞a c√≥ d√≤ng ng√†y c·∫≠p nh·∫≠t, th√™m v√†o ƒë·∫ßu file
                if not found:
                    md_file.seek(0, 0)  # Quay l·∫°i ƒë·∫ßu file ƒë·ªÉ ghi n·ªôi dung m·ªõi
                    md_file.write(f"**Ng√†y c·∫≠p nh·∫≠t**: {info.get('last_modified', 'Kh√¥ng c√≥ d·ªØ li·ªáu')}\n\n")
                    md_file.writelines(lines)

            print(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t {md_file_path}")
        else:
            print(f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file .md cho m√¥n h·ªçc: {subject}")

if __name__ == "__main__":
    update_markdown_files()
